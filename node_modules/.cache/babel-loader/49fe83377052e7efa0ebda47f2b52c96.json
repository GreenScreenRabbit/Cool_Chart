{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\trd\\\\src\\\\stread\\\\chartPic\\\\ChartPic.tsx\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./chartPic.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartPic = props => {\n  const sticks = [];\n\n  const calculationMoney = () => {\n    body;\n  };\n\n  const createSticks = yearCount => {\n    for (var i = 0; i < +yearCount; i++) {\n      console.log(i);\n      console.log(yearCount);\n      sticks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stickContainer-stick\",\n        style: {\n          flexBasis: \"10%\"\n        },\n        children: \"g\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this));\n    } // let keys = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n    // let values = [1, 2, 3, 4, 5];\n    // let obj = {};\n    // for (let i = 0; i <= 4; i++) {\n    //     obj[keys[i]] = values[i];\n    // }\n    // console.log(obj);\n\n  };\n\n  createSticks(props.countYear);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            offset: 1,\n            span: 10\n          },\n          style: {\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stickContainer\",\n            children: sticks.map(stick => stick)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChartPic;\n\nconst mapStateToProps = state => ({\n  countYear: state.generalState.countYear,\n  periodicity: state.generalState.periodicity,\n  initialAmount: state.generalState.initialAmount,\n  replenishment: state.generalState.replenishment,\n  interestAccruals: state.generalState.interestAccruals\n});\n\nexport default connect(mapStateToProps, {})(ChartPic);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPic\");","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/stread/chartPic/ChartPic.tsx"],"names":["Col","Row","connect","ChartPic","props","sticks","calculationMoney","body","createSticks","yearCount","i","console","log","push","flexBasis","countYear","height","width","position","offset","span","map","stick","mapStateToProps","state","generalState","periodicity","initialAmount","replenishment","interestAccruals"],"mappings":";AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,OAAO,gBAAP;;;AAUA,MAAMC,QAAQ,GAAIC,KAAD,IAAsB;AACnC,QAAMC,MAAqB,GAAG,EAA9B;;AAGA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,IAAI;AACL,GAFD;;AAIA,QAAMC,YAAY,GAAIC,SAAD,IAAuB;AACxC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAACD,SAArB,EAAgCC,CAAC,EAAjC,EAAqC;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAJ,MAAAA,MAAM,CAACQ,IAAP,eACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KATuC,CAWxC;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACH,GApBD;;AAsBAN,EAAAA,YAAY,CAACJ,KAAK,CAACW,SAAP,CAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,QAAQ,EAAE;AAA3C,OAAZ;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEF,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEE,YAAAA,MAAM,EAAE,CAAV;AAAaC,YAAAA,IAAI,EAAE;AAAnB,WAAT;AAAkC,UAAA,KAAK,EAAE;AAAEF,YAAAA,QAAQ,EAAE;AAAZ,WAAzC;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,sBACKb,MAAM,CAACgB,GAAP,CAAYC,KAAD,IAAWA,KAAtB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAtDD;;KAAMnB,Q;;AAwDN,MAAMoB,eAAe,GAAIC,KAAD,KAA4B;AAChDT,EAAAA,SAAS,EAAES,KAAK,CAACC,YAAN,CAAmBV,SADkB;AAEhDW,EAAAA,WAAW,EAAEF,KAAK,CAACC,YAAN,CAAmBC,WAFgB;AAGhDC,EAAAA,aAAa,EAAEH,KAAK,CAACC,YAAN,CAAmBE,aAHc;AAIhDC,EAAAA,aAAa,EAAEJ,KAAK,CAACC,YAAN,CAAmBG,aAJc;AAKhDC,EAAAA,gBAAgB,EAAEL,KAAK,CAACC,YAAN,CAAmBI;AALW,CAA5B,CAAxB;;AAQA,eAAe3B,OAAO,CAACqB,eAAD,EAAkB,EAAlB,CAAP,CAA6BpB,QAA7B,CAAf","sourcesContent":["import { Col, Row } from \"react-bootstrap\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport \"./chartPic.css\";\r\n\r\ntype PropsType = {\r\n    countYear: string;\r\n    periodicity: string;\r\n    initialAmount: string;\r\n    replenishment: string;\r\n    interestAccruals: string;\r\n};\r\n\r\nconst ChartPic = (props: PropsType) => {\r\n    const sticks: JSX.Element[] = [];\r\n\r\n\r\n    const calculationMoney = () => {\r\n      body\r\n    }\r\n\r\n    const createSticks = (yearCount: string) => {\r\n        for (var i = 0; i < +yearCount; i++) {\r\n            console.log(i);\r\n            console.log(yearCount);\r\n            sticks.push(\r\n                <div className=\"stickContainer-stick\" style={{ flexBasis: \"10%\" }}>\r\n                    g\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // let keys = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n        // let values = [1, 2, 3, 4, 5];\r\n        // let obj = {};\r\n\r\n        // for (let i = 0; i <= 4; i++) {\r\n        //     obj[keys[i]] = values[i];\r\n        // }\r\n\r\n        // console.log(obj);\r\n    };\r\n\r\n    createSticks(props.countYear);\r\n\r\n    return (\r\n        <div className=\"body-container\">\r\n            <div style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}>\r\n                <Row style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col md={{ offset: 1, span: 10 }} style={{ position: \"relative\" }}>\r\n                        <div className=\"stickContainer\">\r\n                            {sticks.map((stick) => stick)}\r\n                            {/* <div className=\"stickContainer-stick\" style={{ flexBasis: \"15%\" }}>\r\n                                g\r\n                            </div>\r\n                            <div className=\"stickContainer-stick\" style={{ flexBasis: \"15%\" }}>\r\n                                g\r\n                            </div>\r\n                            <div className=\"stickContainer-stick\" style={{ flexBasis: \"15%\" }}>\r\n                                g\r\n                            </div> */}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    countYear: state.generalState.countYear,\r\n    periodicity: state.generalState.periodicity,\r\n    initialAmount: state.generalState.initialAmount,\r\n    replenishment: state.generalState.replenishment,\r\n    interestAccruals: state.generalState.interestAccruals,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ChartPic);\r\n"]},"metadata":{},"sourceType":"module"}