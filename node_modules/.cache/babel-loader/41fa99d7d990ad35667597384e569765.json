{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { COUNT_YEAR, SET_INITIAL_AMOUNT, SET_INTEREST_ACCRUALS, SET_PERIODICITY, SET_REPLENISHMENT } from \"./actions and const/const\";\nconst initialState = {\n  countYear: \"\"\n};\n\nconst stateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case COUNT_YEAR:\n      {\n        return { ...state,\n          countYear: action.year\n        };\n      }\n\n    case SET_INITIAL_AMOUNT:\n      {\n        return { ...state,\n          initialAmount: action.amount\n        };\n      }\n\n    case SET_REPLENISHMENT:\n      {\n        return { ...state,\n          replenishment: action.replenishment\n        };\n      }\n\n    case SET_PERIODICITY:\n      {\n        return { ...state,\n          periodicity: action.periodicity\n        };\n      }\n\n    case SET_INTEREST_ACCRUALS:\n      {\n        return { ...state,\n          interestAccruals: action\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  generalState: stateReducer\n});","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/rootReducer.tsx"],"names":["combineReducers","COUNT_YEAR","SET_INITIAL_AMOUNT","SET_INTEREST_ACCRUALS","SET_PERIODICITY","SET_REPLENISHMENT","initialState","countYear","stateReducer","state","action","type","year","initialAmount","amount","replenishment","periodicity","interestAccruals","rootReducer","generalState"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,kBAArB,EAAyCC,qBAAzC,EAAgEC,eAAhE,EAAiFC,iBAAjF,QAA0G,2BAA1G;AAMA,MAAMC,YAA8B,GAAG;AACnCC,EAAAA,SAAS,EAAE;AADwB,CAAvC;;AAIA,MAAMC,YAAY,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAvCH,YAAuC;AAAA,MAAzBI,MAAyB;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,UAAL;AAAiB;AACb,eAAO,EAAE,GAAGQ,KAAL;AAAYF,UAAAA,SAAS,EAAEG,MAAM,CAACE;AAA9B,SAAP;AACH;;AACD,SAAKV,kBAAL;AAAyB;AACrB,eAAO,EAAE,GAAGO,KAAL;AAAYI,UAAAA,aAAa,EAAEH,MAAM,CAACI;AAAlC,SAAP;AACH;;AACD,SAAKT,iBAAL;AAAwB;AACpB,eAAO,EAAE,GAAGI,KAAL;AAAYM,UAAAA,aAAa,EAAEL,MAAM,CAACK;AAAlC,SAAP;AACH;;AACD,SAAKX,eAAL;AAAsB;AAClB,eAAO,EAAE,GAAGK,KAAL;AAAYO,UAAAA,WAAW,EAAEN,MAAM,CAACM;AAAhC,SAAP;AACH;;AACO,SAAKb,qBAAL;AAA4B;AACxB,eAAO,EAAE,GAAGM,KAAL;AAAYQ,UAAAA,gBAAgB,EAAEP;AAA9B,SAAP;AACH;;AAET;AACI,aAAOD,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,OAAO,MAAMS,WAAW,GAAGlB,eAAe,CAAC;AACvCmB,EAAAA,YAAY,EAAEX;AADyB,CAAD,CAAnC","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { actions, ActionsTypes } from \"./actions and const/actions\";\r\nimport { COUNT_YEAR, SET_INITIAL_AMOUNT, SET_INTEREST_ACCRUALS, SET_PERIODICITY, SET_REPLENISHMENT } from \"./actions and const/const\";\r\n\r\ntype InitialStateType = {\r\n    countYear: string;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n    countYear: \"\",\r\n};\r\n\r\nconst stateReducer = (state = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case COUNT_YEAR: {\r\n            return { ...state, countYear: action.year };\r\n        }\r\n        case SET_INITIAL_AMOUNT: {\r\n            return { ...state, initialAmount: action.amount };\r\n        }\r\n        case SET_REPLENISHMENT: {\r\n            return { ...state, replenishment: action.replenishment };\r\n        }\r\n        case SET_PERIODICITY: {\r\n            return { ...state, periodicity: action.periodicity };\r\n        }\r\n                case SET_INTEREST_ACCRUALS: {\r\n                    return { ...state, interestAccruals: action}\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    generalState: stateReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}