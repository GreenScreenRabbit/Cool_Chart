{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { COUNT_YEAR, SET_INITIAL_AMOUNT, SET_INTEREST_ACCRUALS, SET_PERIODICITY, SET_REPLENISHMENT } from \"./actions and const/const\";\nconst initialState = {\n  countYear: \"\",\n  initialAmount,\n  replenishment,\n  periodicity,\n  interestAccruals\n};\n\nconst stateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case COUNT_YEAR:\n      {\n        return { ...state,\n          countYear: action.year\n        };\n      }\n\n    case SET_INITIAL_AMOUNT:\n      {\n        return { ...state,\n          initialAmount: action.amount\n        };\n      }\n\n    case SET_REPLENISHMENT:\n      {\n        return { ...state,\n          replenishment: action.replenishment\n        };\n      }\n\n    case SET_PERIODICITY:\n      {\n        return { ...state,\n          periodicity: action.periodicity\n        };\n      }\n\n    case SET_INTEREST_ACCRUALS:\n      {\n        return { ...state,\n          interestAccruals: action.interestAccruals\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  generalState: stateReducer\n});","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/rootReducer.tsx"],"names":["combineReducers","COUNT_YEAR","SET_INITIAL_AMOUNT","SET_INTEREST_ACCRUALS","SET_PERIODICITY","SET_REPLENISHMENT","initialState","countYear","initialAmount","replenishment","periodicity","interestAccruals","stateReducer","state","action","type","year","amount","rootReducer","generalState"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SACIC,UADJ,EAEIC,kBAFJ,EAGIC,qBAHJ,EAIIC,eAJJ,EAKIC,iBALJ,QAMO,2BANP;AAkBA,MAAMC,YAA8B,GAAG;AACnCC,EAAAA,SAAS,EAAE,EADwB;AAEnCC,EAAAA,aAFmC;AAGnCC,EAAAA,aAHmC;AAInCC,EAAAA,WAJmC;AAKnCC,EAAAA;AALmC,CAAvC;;AAQA,MAAMC,YAAY,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAvCP,YAAuC;AAAA,MAAzBQ,MAAyB;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,UAAL;AAAiB;AACb,eAAO,EAAE,GAAGY,KAAL;AAAYN,UAAAA,SAAS,EAAEO,MAAM,CAACE;AAA9B,SAAP;AACH;;AACD,SAAKd,kBAAL;AAAyB;AACrB,eAAO,EAAE,GAAGW,KAAL;AAAYL,UAAAA,aAAa,EAAEM,MAAM,CAACG;AAAlC,SAAP;AACH;;AACD,SAAKZ,iBAAL;AAAwB;AACpB,eAAO,EAAE,GAAGQ,KAAL;AAAYJ,UAAAA,aAAa,EAAEK,MAAM,CAACL;AAAlC,SAAP;AACH;;AACD,SAAKL,eAAL;AAAsB;AAClB,eAAO,EAAE,GAAGS,KAAL;AAAYH,UAAAA,WAAW,EAAEI,MAAM,CAACJ;AAAhC,SAAP;AACH;;AACD,SAAKP,qBAAL;AAA4B;AACxB,eAAO,EAAE,GAAGU,KAAL;AAAYF,UAAAA,gBAAgB,EAAEG,MAAM,CAACH;AAArC,SAAP;AACH;;AAED;AACI,aAAOE,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,OAAO,MAAMK,WAAW,GAAGlB,eAAe,CAAC;AACvCmB,EAAAA,YAAY,EAAEP;AADyB,CAAD,CAAnC","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { actions, ActionsTypes } from \"./actions and const/actions\";\r\nimport {\r\n    COUNT_YEAR,\r\n    SET_INITIAL_AMOUNT,\r\n    SET_INTEREST_ACCRUALS,\r\n    SET_PERIODICITY,\r\n    SET_REPLENISHMENT,\r\n} from \"./actions and const/const\";\r\n\r\ntype InitialStateType = {\r\n    countYear: string;\r\n\r\n    initialAmount: string \r\nreplenishment: string \r\nperiodicity: string \r\ninterestAccruals: string \r\n\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n    countYear: \"\",\r\n    initialAmount,\r\n    replenishment,\r\n    periodicity,\r\n    interestAccruals,\r\n};\r\n\r\nconst stateReducer = (state = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case COUNT_YEAR: {\r\n            return { ...state, countYear: action.year };\r\n        }\r\n        case SET_INITIAL_AMOUNT: {\r\n            return { ...state, initialAmount: action.amount };\r\n        }\r\n        case SET_REPLENISHMENT: {\r\n            return { ...state, replenishment: action.replenishment };\r\n        }\r\n        case SET_PERIODICITY: {\r\n            return { ...state, periodicity: action.periodicity };\r\n        }\r\n        case SET_INTEREST_ACCRUALS: {\r\n            return { ...state, interestAccruals: action.interestAccruals };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    generalState: stateReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}