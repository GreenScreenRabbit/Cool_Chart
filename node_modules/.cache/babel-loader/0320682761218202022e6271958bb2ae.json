{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { COUNT_YEAR, SET_INITIAL_AMOUNT, SET_REPLENISHMENT } from \"./actions and const/const\";\nconst initialState = {\n  countYear: \"\"\n};\n\nconst stateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case COUNT_YEAR:\n      {\n        return { ...state,\n          countYear: action.year\n        };\n      }\n\n    case SET_INITIAL_AMOUNT:\n      {\n        return { ...state,\n          initialAmount: action.amount\n        };\n      }\n\n    case SET_REPLENISHMENT:\n      {\n        return { ...state,\n          replenishment: action.replenishment\n        };\n      }\n\n    case SET_PERIODICITY:\n      {\n        return { ...state,\n          perio\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  generalState: stateReducer\n});","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/rootReducer.tsx"],"names":["combineReducers","COUNT_YEAR","SET_INITIAL_AMOUNT","SET_REPLENISHMENT","initialState","countYear","stateReducer","state","action","type","year","initialAmount","amount","replenishment","SET_PERIODICITY","perio","rootReducer","generalState"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,kBAArB,EAAyCC,iBAAzC,QAAkE,2BAAlE;AAMA,MAAMC,YAA8B,GAAG;AACnCC,EAAAA,SAAS,EAAE;AADwB,CAAvC;;AAIA,MAAMC,YAAY,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAvCH,YAAuC;AAAA,MAAzBI,MAAyB;;AACjE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,UAAL;AAAiB;AACb,eAAO,EAAE,GAAGM,KAAL;AAAYF,UAAAA,SAAS,EAAEG,MAAM,CAACE;AAA9B,SAAP;AACH;;AACD,SAAKR,kBAAL;AAAwB;AACpB,eAAO,EAAC,GAAGK,KAAJ;AAAWI,UAAAA,aAAa,EAAEH,MAAM,CAACI;AAAjC,SAAP;AACH;;AACD,SAAKT,iBAAL;AAAuB;AACnB,eAAM,EAAC,GAAGI,KAAJ;AAAWM,UAAAA,aAAa,EAAEL,MAAM,CAACK;AAAjC,SAAN;AACH;;AACO,SAAKC,eAAL;AAAsB;AAClB,eAAO,EAAE,GAAGP,KAAL;AAAYQ,UAAAA;AAAZ,SAAP;AACH;;AAET;AACI,aAAOR,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,OAAO,MAAMS,WAAW,GAAGhB,eAAe,CAAC;AACvCiB,EAAAA,YAAY,EAAEX;AADyB,CAAD,CAAnC","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport { actions, ActionsTypes } from \"./actions and const/actions\";\r\nimport { COUNT_YEAR, SET_INITIAL_AMOUNT, SET_REPLENISHMENT } from \"./actions and const/const\";\r\n\r\ntype InitialStateType = {\r\n    countYear: string;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n    countYear: \"\",\r\n};\r\n\r\nconst stateReducer = (state = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case COUNT_YEAR: {\r\n            return { ...state, countYear: action.year };\r\n        }\r\n        case SET_INITIAL_AMOUNT:{\r\n            return {...state, initialAmount: action.amount}\r\n        }\r\n        case SET_REPLENISHMENT:{\r\n            return{...state, replenishment: action.replenishment}\r\n        }\r\n                case SET_PERIODICITY: {\r\n                    return { ...state, perio}\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n    generalState: stateReducer,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}