{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\trd\\\\src\\\\stread\\\\chartPic\\\\ChartPic.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./chartPic.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartPic = props => {\n  _s();\n\n  const sticks = [];\n  const heightOFSticksContainer = 800 / 100 * 80;\n  const [isShowDropPopMenu, setIsShowDropPopMenu] = useState(false);\n  const [indexShowDropPopMenu, setIndexShowDropPopMenu] = useState();\n  let maxCapitalAtMouth = 0;\n\n  const showPropMenu = (i, isShow) => {\n    if (i != undefined) setIsShowDropPopMenu(isShow);\n    setIndexShowDropPopMenu(i);\n  };\n\n  const takePeriodicityYear = () => {\n    if (props.periodicity == \"EVERY MONTH\") {\n      return +props.replenishment * 12;\n    } else {\n      return +props.replenishment;\n    }\n  };\n\n  const periodicityYear = takePeriodicityYear();\n\n  const calculationDefaultMoney = (periodicityYear, countYear, initialAmount) => {\n    const defaultMoney = [];\n    defaultMoney.push(+initialAmount + periodicityYear);\n\n    for (var i = 0; i < +countYear - 1; i++) {\n      defaultMoney.push(defaultMoney[i] + periodicityYear);\n    }\n\n    console.log(`defaultMoney = ${defaultMoney}`);\n    return defaultMoney;\n  };\n\n  const moneyWithoutPercent = calculationDefaultMoney(periodicityYear, props.countYear, props.initialAmount);\n\n  const calculationCompoundInterest = () => {\n    const percentMoney = [];\n    percentMoney.push((+props.initialAmount + periodicityYear) / 100 * (100 + +props.interestAccruals));\n\n    for (var i = 0; i < +props.countYear - 1; i++) {\n      percentMoney.push(+(+((+percentMoney[i] + periodicityYear) / 100) * (100 + +props.interestAccruals)));\n    }\n\n    const removeСommas = money => {\n      return money.map(num => {\n        return +num.toFixed(10);\n      });\n    };\n\n    const money = removeСommas(percentMoney);\n    return money;\n  };\n\n  const moneyWithPercent = calculationCompoundInterest();\n\n  const findMaxCapitalAtMouth = money => {\n    maxCapitalAtMouth = Math.max(...money);\n  };\n\n  findMaxCapitalAtMouth(moneyWithPercent);\n\n  const takeOneProcentOfMaxPrice = price => {\n    return price / maxCapitalAtMouth;\n  };\n\n  const oneProcMaxMoney = takeOneProcentOfMaxPrice(maxCapitalAtMouth);\n  console.log(`moneyWithPercent = ${moneyWithPercent}`);\n  console.log(`maxCapitalAtMouth = ${maxCapitalAtMouth}`);\n\n  const createSticks = (yearCount, isMoneyWithPercent) => {\n    const stck = [];\n\n    for (var i = 0; i < yearCount.length; i++) {\n      console.log(i);\n      console.log(yearCount);\n      if (yearCount[0] != 0) stck.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stickContainer-stick\",\n        style: {\n          flexBasis: \"10%\" // backgroundColor: isMoneyWithPercent ? \"blue\" : \"orange\",\n          // height: +yearCount[i] / (maxCapitalAtMouth / 100) + \"px\",\n\n        },\n        children: [isShowDropPopMenu == true && indexShowDropPopMenu == i ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), +yearCount[i]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this));\n      if (yearCount[0] != 0) sticks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stickContainer-stick\",\n        style: {\n          flexBasis: \"10%\"\n        },\n        children: [\"g \", yearCount[i]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this));\n    }\n\n    return stck;\n  }; // createSticks(props.countYear, true);\n\n\n  const stc = createSticks(moneyWithPercent, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            offset: 1,\n            span: 10\n          },\n          style: {\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stickContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stickContainer-first\",\n              children: moneyWithPercent.map((num, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stickContainer-stick\",\n                  onMouseEnter: () => {\n                    showPropMenu(indexShowDropPopMenu, false);\n                    showPropMenu(index, true);\n                  },\n                  onMouseLeave: () => {\n                    showPropMenu(index, false);\n                  },\n                  style: {\n                    flexBasis: \"5%\",\n                    width: \"1%\",\n                    backgroundColor: \"blue\",\n                    height: +num / (maxCapitalAtMouth / 100) + \"%\",\n                    top: 100 - +num / (maxCapitalAtMouth / 100) + \"%\"\n                  },\n                  children: isShowDropPopMenu == true && indexShowDropPopMenu == index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"stickContainer-stick-fropPop\",\n                    onMouseLeave: () => {\n                      showPropMenu(index, false);\n                    },\n                    children: \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stickContainer-second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChartPic, \"J4d92O0Mrmk1wWokMUDvhufWMWw=\");\n\n_c = ChartPic;\n\nconst mapStateToProps = state => ({\n  countYear: state.generalState.countYear,\n  periodicity: state.generalState.periodicity,\n  initialAmount: state.generalState.initialAmount,\n  replenishment: state.generalState.replenishment,\n  interestAccruals: state.generalState.interestAccruals\n});\n\nexport default connect(mapStateToProps, {})(ChartPic);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPic\");","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/stread/chartPic/ChartPic.tsx"],"names":["useState","Col","Row","connect","ChartPic","props","sticks","heightOFSticksContainer","isShowDropPopMenu","setIsShowDropPopMenu","indexShowDropPopMenu","setIndexShowDropPopMenu","maxCapitalAtMouth","showPropMenu","i","isShow","undefined","takePeriodicityYear","periodicity","replenishment","periodicityYear","calculationDefaultMoney","countYear","initialAmount","defaultMoney","push","console","log","moneyWithoutPercent","calculationCompoundInterest","percentMoney","interestAccruals","removeСommas","money","map","num","toFixed","moneyWithPercent","findMaxCapitalAtMouth","Math","max","takeOneProcentOfMaxPrice","price","oneProcMaxMoney","createSticks","yearCount","isMoneyWithPercent","stck","length","flexBasis","stc","height","width","position","offset","span","index","backgroundColor","top","mapStateToProps","state","generalState"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport \"./chartPic.css\";\r\n\r\ntype PropsType = {\r\n    countYear: string;\r\n    periodicity: string;\r\n    initialAmount: string;\r\n    replenishment: string;\r\n    interestAccruals: string;\r\n};\r\n\r\nconst ChartPic = (props: PropsType) => {\r\n    const sticks: JSX.Element[] = [];\r\n\r\n    const heightOFSticksContainer = (800 / 100) * 80;\r\n\r\n    const [isShowDropPopMenu, setIsShowDropPopMenu] = useState(false);\r\n    const [indexShowDropPopMenu, setIndexShowDropPopMenu] = useState<number>();\r\n\r\n    let maxCapitalAtMouth: number = 0;\r\n\r\n    const showPropMenu = (i: number | undefined, isShow: boolean) => {\r\n        if (i != undefined) setIsShowDropPopMenu(isShow);\r\n        setIndexShowDropPopMenu(i);\r\n    };\r\n\r\n    const takePeriodicityYear = (): number => {\r\n        if (props.periodicity == \"EVERY MONTH\") {\r\n            return +props.replenishment * 12;\r\n        } else {\r\n            return +props.replenishment;\r\n        }\r\n    };\r\n\r\n    const periodicityYear = takePeriodicityYear();\r\n\r\n    const calculationDefaultMoney = (periodicityYear: number, countYear: string, initialAmount: string) => {\r\n        const defaultMoney: number[] = [];\r\n\r\n        defaultMoney.push(+initialAmount + periodicityYear);\r\n\r\n        for (var i = 0; i < +countYear - 1; i++) {\r\n            defaultMoney.push(defaultMoney[i] + periodicityYear);\r\n        }\r\n        console.log(`defaultMoney = ${defaultMoney}`);\r\n\r\n        return defaultMoney;\r\n    };\r\n\r\n    const moneyWithoutPercent = calculationDefaultMoney(periodicityYear, props.countYear, props.initialAmount);\r\n\r\n    const calculationCompoundInterest = () => {\r\n        const percentMoney: number[] = [];\r\n\r\n        percentMoney.push(((+props.initialAmount + periodicityYear) / 100) * (100 + +props.interestAccruals));\r\n\r\n        for (var i = 0; i < +props.countYear - 1; i++) {\r\n            percentMoney.push(+(+((+percentMoney[i] + periodicityYear) / 100) * (100 + +props.interestAccruals)));\r\n        }\r\n\r\n        const removeСommas = (money: number[]) => {\r\n            return money.map((num) => {\r\n                return +num.toFixed(10);\r\n            });\r\n        };\r\n\r\n        const money = removeСommas(percentMoney);\r\n\r\n        return money;\r\n    };\r\n\r\n    const moneyWithPercent = calculationCompoundInterest();\r\n\r\n    const findMaxCapitalAtMouth = (money: number[]) => {\r\n        maxCapitalAtMouth = Math.max(...money);\r\n    };\r\n    findMaxCapitalAtMouth(moneyWithPercent);\r\n\r\n    const takeOneProcentOfMaxPrice = (price: number) => {\r\n        return price / maxCapitalAtMouth;\r\n    };\r\n\r\n    const oneProcMaxMoney = takeOneProcentOfMaxPrice(maxCapitalAtMouth);\r\n\r\n    console.log(`moneyWithPercent = ${moneyWithPercent}`);\r\n\r\n    console.log(`maxCapitalAtMouth = ${maxCapitalAtMouth}`);\r\n\r\n    const createSticks = (yearCount: number[], isMoneyWithPercent: boolean) => {\r\n        const stck: JSX.Element[] = [];\r\n\r\n        for (var i = 0; i < yearCount.length; i++) {\r\n            console.log(i);\r\n            console.log(yearCount);\r\n\r\n            if (yearCount[0] != 0)\r\n                stck.push(\r\n                    <div\r\n                        className=\"stickContainer-stick\"\r\n                        style={{\r\n                            flexBasis: \"10%\",\r\n                            // backgroundColor: isMoneyWithPercent ? \"blue\" : \"orange\",\r\n                            // height: +yearCount[i] / (maxCapitalAtMouth / 100) + \"px\",\r\n                        }}\r\n                    >\r\n                        {isShowDropPopMenu == true && indexShowDropPopMenu == i ? (\r\n                            <div className=\"\">true</div>\r\n                        ) : (\r\n                            <div className=\"\">false</div>\r\n                        )}\r\n                        {+yearCount[i]}\r\n                    </div>\r\n                );\r\n            if (yearCount[0] != 0)\r\n                sticks.push(\r\n                    <div className=\"stickContainer-stick\" style={{ flexBasis: \"10%\" }}>\r\n                        g {yearCount[i]}\r\n                    </div>\r\n                );\r\n        }\r\n\r\n        return stck;\r\n    };\r\n\r\n    // createSticks(props.countYear, true);\r\n    const stc = createSticks(moneyWithPercent, true);\r\n\r\n    return (\r\n        <div className=\"body-container\">\r\n            <div style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}>\r\n                <Row style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col md={{ offset: 1, span: 10 }} style={{ position: \"relative\" }}>\r\n                        {/* <div className=\"stickContainer\">{sticks.map((stick) => stick)}</div> */}\r\n                        <div className=\"stickContainer\">\r\n                            {/* {stc.map((stick, i) => {\r\n                                let bol = false;\r\n\r\n                                return <div onClick={() => showPropMenu(i)} style={{\r\n                                    // backgroundColor: isMoneyWithPercent ? \"blue\" : \"orange\",\r\n                                    backgroundColor:  \"blue\",\r\n                                    height: +yearCount[i] / (maxCapitalAtMouth / 100) + \"px\",\r\n\r\n\r\n                                }}>{stick}</div>;\r\n                            })} */}\r\n                            <div className=\"stickContainer-first\">\r\n                                {moneyWithPercent.map((num, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            className=\"stickContainer-stick\"\r\n                                            onMouseEnter={() => {\r\n                                                showPropMenu(indexShowDropPopMenu, false);\r\n                                                showPropMenu(index, true);\r\n                                            }}\r\n                                            onMouseLeave={() => {\r\n                                                showPropMenu(index, false);\r\n                                            }}\r\n                                            style={{\r\n                                                flexBasis: \"5%\",\r\n                                                width: \"1%\",\r\n                                                backgroundColor: \"blue\",\r\n                                                height: +num / (maxCapitalAtMouth / 100) + \"%\",\r\n                                                top: 100 - +num / (maxCapitalAtMouth / 100) + \"%\",\r\n                                            }}\r\n                                        >\r\n                                            {isShowDropPopMenu == true && indexShowDropPopMenu == index ? (\r\n                                                <div\r\n                                                    className=\"stickContainer-stick-fropPop\"\r\n                                                    onMouseLeave={() => {\r\n                                                        showPropMenu(index, false);\r\n                                                    }}\r\n                                                >\r\n                                                    true\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div className=\"\"></div>\r\n                                            )}\r\n                                            {/* {num} */}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                            <div className=\"stickContainer-second\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    countYear: state.generalState.countYear,\r\n    periodicity: state.generalState.periodicity,\r\n    initialAmount: state.generalState.initialAmount,\r\n    replenishment: state.generalState.replenishment,\r\n    interestAccruals: state.generalState.interestAccruals,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ChartPic);\r\n"]},"metadata":{},"sourceType":"module"}