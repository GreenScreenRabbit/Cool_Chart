{"ast":null,"code":"import { COUNT_YEAR, SET_INITIAL_AMOUNT } from './const';\nexport const actions = {\n  setCounterYear: year => ({\n    type: COUNT_YEAR,\n    year\n  }),\n  setInitialAmount: amount => ({\n    type: SET_INITIAL_AMOUNT,\n    amount\n  }),\n  setReplenishment: replenishment => ({\n    type: SET_REPLENISHMENT,\n    replenishment\n  }),\n  setPeriodicity: periodicity => ({\n    type: SET_PERIODICITY,\n    periodicity\n  }),\n  setInterestAccruals: interestAccruals => ({\n    type: SET_INTEREST_ACCRUALS,\n    interestAccruals\n  })\n};","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/actions and const/actions.tsx"],"names":["COUNT_YEAR","SET_INITIAL_AMOUNT","actions","setCounterYear","year","type","setInitialAmount","amount","setReplenishment","replenishment","SET_REPLENISHMENT","setPeriodicity","periodicity","SET_PERIODICITY","setInterestAccruals","interestAccruals","SET_INTEREST_ACCRUALS"],"mappings":"AAAA,SACIA,UADJ,EACgBC,kBADhB,QAEO,SAFP;AAQA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,cAAc,EAAGC,IAAD,KAAmB;AAAEC,IAAAA,IAAI,EAAEL,UAAR;AAAoBI,IAAAA;AAApB,GAAnB,CADG;AAEnBE,EAAAA,gBAAgB,EAAGC,MAAD,KAAqB;AAAEF,IAAAA,IAAI,EAAEJ,kBAAR;AAA4BM,IAAAA;AAA5B,GAArB,CAFC;AAGnBC,EAAAA,gBAAgB,EAAGC,aAAD,KAA4B;AAAEJ,IAAAA,IAAI,EAAEK,iBAAR;AAA2BD,IAAAA;AAA3B,GAA5B,CAHC;AAInBE,EAAAA,cAAc,EAAGC,WAAD,KAA0B;AAAEP,IAAAA,IAAI,EAAEQ,eAAR;AAAyBD,IAAAA;AAAzB,GAA1B,CAJG;AAKnBE,EAAAA,mBAAmB,EAAGC,gBAAD,KAA+B;AAAEV,IAAAA,IAAI,EAAEW,qBAAR;AAA+BD,IAAAA;AAA/B,GAA/B;AALF,CAAhB","sourcesContent":["import {\r\n    COUNT_YEAR, SET_INITIAL_AMOUNT\r\n} from './const'\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\n\r\ntype GetActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\r\n\r\nexport const actions = {\r\n    setCounterYear: (year: string) => ({ type: COUNT_YEAR, year } as const),\r\n    setInitialAmount: (amount: string) => ({ type: SET_INITIAL_AMOUNT, amount } as const),\r\n    setReplenishment: (replenishment: string) => ({ type: SET_REPLENISHMENT, replenishment } as const),\r\n    setPeriodicity: (periodicity: string) => ({ type: SET_PERIODICITY, periodicity } as const),\r\n    setInterestAccruals: (interestAccruals: string) => ({ type: SET_INTEREST_ACCRUALS, interestAccruals  } as const),\r\n}\r\n\r\nexport type ActionsTypes = GetActionsTypes<typeof actions>"]},"metadata":{},"sourceType":"module"}