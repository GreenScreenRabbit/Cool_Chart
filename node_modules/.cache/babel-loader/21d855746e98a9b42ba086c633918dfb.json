{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Viktor\\\\trd\\\\src\\\\stread\\\\chartPic\\\\ChartPic.tsx\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./chartPic.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartPic = () => {\n  const createSticks = yearCount => {\n    for (var i = 0; i < yearCount; i++) {\n      console.log(i);\n      console.log(yearCount); // ещё какие-то выражения\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            offset: 1,\n            span: 10\n          },\n          style: {\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stickContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stickContainer-stick\",\n              style: {\n                flexBasis: \"15%\"\n              },\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stickContainer-stick\",\n              style: {\n                flexBasis: \"15%\"\n              },\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stickContainer-stick\",\n              style: {\n                flexBasis: \"15%\"\n              },\n              children: \"g\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChartPic;\n\nconst mapStateToProps = state => ({\n  countYear: state.generalState.countYear,\n  periodicity: state.generalState.periodicity,\n  initialAmount: state.generalState.initialAmount,\n  replenishment: state.generalState.replenishment,\n  interestAccruals: state.generalState.interestAccruals\n});\n\nexport default connect(mapStateToProps, null)(ChartPic);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPic\");","map":{"version":3,"sources":["C:/Users/Viktor/trd/src/stread/chartPic/ChartPic.tsx"],"names":["Col","Row","connect","ChartPic","createSticks","yearCount","i","console","log","height","width","position","offset","span","flexBasis","mapStateToProps","state","countYear","generalState","periodicity","initialAmount","replenishment","interestAccruals"],"mappings":";AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAMC,YAAY,GAAIC,SAAD,IAAuB;AAExC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAFgC,CAGhC;AACH;AACJ,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,QAAQ,EAAE;AAA3C,OAAZ;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEF,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEE,YAAAA,MAAM,EAAE,CAAV;AAAaC,YAAAA,IAAI,EAAE;AAAnB,WAAT;AAAkC,UAAA,KAAK,EAAE;AAAEF,YAAAA,QAAQ,EAAE;AAAZ,WAAzC;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEG,gBAAAA,SAAS,EAAE;AAAb,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,SAAS,EAAE;AAAb,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAsC,cAAA,KAAK,EAAE;AAAEA,gBAAAA,SAAS,EAAE;AAAb,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA/BD;;KAAMX,Q;;AAiCN,MAAMY,eAAe,GAAIC,KAAD,KAA4B;AAChDC,EAAAA,SAAS,EAAED,KAAK,CAACE,YAAN,CAAmBD,SADkB;AAEhDE,EAAAA,WAAW,EAAEH,KAAK,CAACE,YAAN,CAAmBC,WAFgB;AAGhDC,EAAAA,aAAa,EAAEJ,KAAK,CAACE,YAAN,CAAmBE,aAHc;AAIhDC,EAAAA,aAAa,EAAEL,KAAK,CAACE,YAAN,CAAmBG,aAJc;AAKhDC,EAAAA,gBAAgB,EAAEN,KAAK,CAACE,YAAN,CAAmBI;AALW,CAA5B,CAAxB;;AAQA,eAAepB,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BZ,QAA/B,CAAf","sourcesContent":["import { Col, Row } from \"react-bootstrap\";\r\nimport { connect, RootStateOrAny } from \"react-redux\";\r\nimport \"./chartPic.css\";\r\n\r\nconst ChartPic = () => {\r\n    const createSticks = (yearCount: number) => {\r\n\r\n        for (var i = 0; i < yearCount; i++) {\r\n            console.log(i);\r\n            console.log(yearCount);\r\n            // ещё какие-то выражения\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"body-container\">\r\n            <div style={{ height: \"100%\", width: \"100%\", position: \"relative\" }}>\r\n                <Row style={{ height: \"100%\", width: \"100%\" }}>\r\n                    <Col md={{ offset: 1, span: 10 }} style={{ position: \"relative\" }}>\r\n                        <div className=\"stickContainer\">\r\n                            <div className=\"stickContainer-stick\" style={{ flexBasis: \"15%\" }}>\r\n                                g\r\n                            </div>\r\n                            <div className=\"stickContainer-stick\" style={{ flexBasis: \"15%\" }}>\r\n                                g\r\n                            </div>\r\n                            <div className=\"stickContainer-stick\" style={{ flexBasis: \"15%\" }}>\r\n                                g\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n    countYear: state.generalState.countYear,\r\n    periodicity: state.generalState.periodicity,\r\n    initialAmount: state.generalState.initialAmount,\r\n    replenishment: state.generalState.replenishment,\r\n    interestAccruals: state.generalState.interestAccruals,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ChartPic);\r\n"]},"metadata":{},"sourceType":"module"}